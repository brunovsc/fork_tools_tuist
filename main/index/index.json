{"interfaceLanguages":{"swift":[{"children":[{"title":"Defining Manifests","type":"groupMarker"},{"children":[{"title":"Configuring targets","type":"groupMarker"},{"children":[{"title":"Defining source files","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(globs:)-3u106","title":"init(globs: [String])","type":"init"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(globs:)-9f7d3","title":"init(globs: [SourceFileGlob])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/globs","title":"var globs: [SourceFileGlob]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/paths(_:)","title":"static func paths([Path]) -> SourceFilesList","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/sourcefileslist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(arrayliteral:)","title":"init(arrayLiteral: SourceFileGlob...)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileslist\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileslist\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileslist\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileslist\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileslist\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileslist\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/sourcefileslist","title":"SourceFilesList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/codegen","title":"var codeGen: FileCodeGen?","type":"property"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/compilationcondition","title":"var compilationCondition: PlatformCondition?","type":"property"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/compilerflags","title":"var compilerFlags: String?","type":"property"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/excluding","title":"var excluding: [Path]","type":"property"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/glob","title":"var glob: Path","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/glob(_:excluding:compilerflags:codegen:compilationcondition:)-1alh9","title":"static func glob(Path, excluding: Path?, compilerFlags: String?, codeGen: FileCodeGen?, compilationCondition: PlatformCondition?) -> SourceFileGlob","type":"method"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/glob(_:excluding:compilerflags:codegen:compilationcondition:)-90rk6","title":"static func glob(Path, excluding: [Path], compilerFlags: String?, codeGen: FileCodeGen?, compilationCondition: PlatformCondition?) -> SourceFileGlob","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/sourcefileglob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileglob\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileglob\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileglob\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sourcefileglob\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/sourcefileglob\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/sourcefileglob","title":"SourceFileGlob","type":"struct"},{"title":"Defining headers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/exclusionrule","title":"var exclusionRule: Headers.AutomaticExclusionRule","type":"property"},{"path":"\/documentation\/projectdescription\/headers\/private","title":"var `private`: FileList?","type":"property"},{"path":"\/documentation\/projectdescription\/headers\/project","title":"var project: FileList?","type":"property"},{"path":"\/documentation\/projectdescription\/headers\/public","title":"var `public`: FileList?","type":"property"},{"path":"\/documentation\/projectdescription\/headers\/umbrellaheader","title":"var umbrellaHeader: Path?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/allheaders(from:umbrella:private:)","title":"static func allHeaders(from: FileList, umbrella: Path, private: FileList?) -> Headers","type":"method"},{"path":"\/documentation\/projectdescription\/headers\/headers(public:private:project:exclusionrule:)","title":"static func headers(public: FileList?, private: FileList?, project: FileList?, exclusionRule: Headers.AutomaticExclusionRule) -> Headers","type":"method"},{"path":"\/documentation\/projectdescription\/headers\/onlyheaders(from:umbrella:private:)","title":"static func onlyHeaders(from: FileList, umbrella: Path, private: FileList?) -> Headers","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/projectexcludesprivateandpublic","title":"case projectExcludesPrivateAndPublic","type":"case"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/publicexcludesprivateandproject","title":"case publicExcludesPrivateAndProject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/headers\/automaticexclusionrule","title":"Headers.AutomaticExclusionRule","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/headers\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/headers\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/headers","title":"Headers","type":"struct"},{"title":"Defining resources","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(resources:)","title":"init(resources: [ResourceFileElement])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/resources","title":"var resources: [ResourceFileElement]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcefileelements\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(arrayliteral:)","title":"init(arrayLiteral: ResourceFileElement...)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelements\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelements\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelements\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelements\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelements\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelements\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcefileelements","title":"ResourceFileElements","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/folderreference(path:tags:inclusioncondition:)","title":"case folderReference(path: Path, tags: [String], inclusionCondition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/glob(pattern:excluding:tags:inclusioncondition:)","title":"case glob(pattern: Path, excluding: [Path], tags: [String], inclusionCondition: PlatformCondition?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcefileelement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelement\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelement\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelement\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcefileelement\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcefileelement\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcefileelement","title":"ResourceFileElement","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/extensions","title":"var extensions: Set<String>","type":"property"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.property","title":"var parser: ResourceSynthesizer.Parser","type":"property"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parseroptions","title":"var parserOptions: [String : ResourceSynthesizer.Parser.Option]","type":"property"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.property","title":"var templateType: ResourceSynthesizer.TemplateType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/assets(parseroptions:)","title":"static func assets(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/assets(plugin:parseroptions:)","title":"static func assets(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/coredata(parseroptions:)","title":"static func coreData(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/coredata(plugin:parseroptions:)","title":"static func coreData(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/custom(name:parser:parseroptions:extensions:)","title":"static func custom(name: String, parser: ResourceSynthesizer.Parser, parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/custom(plugin:parser:parseroptions:extensions:resourcename:)","title":"static func custom(plugin: String, parser: ResourceSynthesizer.Parser, parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>, resourceName: String) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/files(parseroptions:extensions:)","title":"static func files(parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/files(plugin:parseroptions:extensions:)","title":"static func files(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/fonts(parseroptions:)","title":"static func fonts(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/fonts(plugin:parseroptions:)","title":"static func fonts(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/interfacebuilder(parseroptions:)","title":"static func interfaceBuilder(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/interfacebuilder(plugin:parseroptions:)","title":"static func interfaceBuilder(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/json(parseroptions:)","title":"static func json(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/json(plugin:parseroptions:)","title":"static func json(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/plists(parseroptions:)","title":"static func plists(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/plists(plugin:parseroptions:)","title":"static func plists(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/strings(parseroptions:)","title":"static func strings(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/strings(plugin:parseroptions:)","title":"static func strings(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/yaml(parseroptions:)","title":"static func yaml(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/yaml(plugin:parseroptions:)","title":"static func yaml(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/assets","title":"case assets","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/coredata","title":"case coreData","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/files","title":"case files","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/fonts","title":"case fonts","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/interfacebuilder","title":"case interfaceBuilder","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/json","title":"case json","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/plists","title":"case plists","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/strings","title":"case strings","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/yaml","title":"case yaml","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/array(_:)","title":"case array([ResourceSynthesizer.Parser.Option])","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/dictionary(_:)","title":"case dictionary([String : ResourceSynthesizer.Parser.Option])","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/double(_:)","title":"case double(Double)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/integer(_:)","title":"case integer(Int)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(arrayliteral:)","title":"init(arrayLiteral: ResourceSynthesizer.Parser.Option...)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(booleanliteral:)","title":"init(booleanLiteral: Bool)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, ResourceSynthesizer.Parser.Option)...)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option","title":"ResourceSynthesizer.Parser.Option","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum","title":"ResourceSynthesizer.Parser","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/defaulttemplate(resourcename:)","title":"case defaultTemplate(resourceName: String)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/plugin(name:resourcename:)","title":"case plugin(name: String, resourceName: String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum","title":"ResourceSynthesizer.TemplateType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer","title":"ResourceSynthesizer","type":"struct"},{"title":"Defining target’s dependencies","type":"groupMarker"},{"children":[{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdkstatus\/optional","title":"case optional","type":"case"},{"path":"\/documentation\/projectdescription\/sdkstatus\/required","title":"case required","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdkstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdkstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/sdkstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdkstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdkstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdkstatus\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/sdkstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/sdkstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/sdkstatus","title":"SDKStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdktype\/framework","title":"case framework","type":"case"},{"path":"\/documentation\/projectdescription\/sdktype\/library","title":"case library","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdktype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/sdktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdktype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdktype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/sdktype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/sdktype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/sdktype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/sdktype","title":"SDKType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformfilter\/catalyst","title":"case catalyst","type":"case"},{"path":"\/documentation\/projectdescription\/platformfilter\/driverkit","title":"case driverkit","type":"case"},{"path":"\/documentation\/projectdescription\/platformfilter\/ios","title":"case ios","type":"case"},{"path":"\/documentation\/projectdescription\/platformfilter\/macos","title":"case macos","type":"case"},{"path":"\/documentation\/projectdescription\/platformfilter\/tvos","title":"case tvos","type":"case"},{"path":"\/documentation\/projectdescription\/platformfilter\/visionos","title":"case visionos","type":"case"},{"path":"\/documentation\/projectdescription\/platformfilter\/watchos","title":"case watchos","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformfilter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformfilter\/'...(_:)-3cvdt","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/'...(_:)-4rl8l","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/_(_:_:)","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/_=(_:_:)-33slz","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/projectdescription\/platformfilter\/_=(_:_:)-fkku","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/platformfilter\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/platformfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/platformfilter","title":"PlatformFilter","type":"enum"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/condition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/condition\/platformfilters","title":"let platformFilters: Set<PlatformFilter>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/condition\/when(_:)","title":"static func when(Set<PlatformFilter>) -> TargetDependency.Condition?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/condition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetdependency\/condition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetdependency\/condition","title":"TargetDependency.Condition","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/external(name:condition:)","title":"case external(name: String, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/framework(path:status:condition:)","title":"case framework(path: Path, status: FrameworkStatus, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/library(path:publicheaders:swiftmodulemap:condition:)","title":"case library(path: Path, publicHeaders: Path, swiftModuleMap: Path?, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/package(product:type:condition:)","title":"case package(product: String, type: TargetDependency.PackageType, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/packageplugin(product:condition:)","title":"case packagePlugin(product: String, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/project(target:path:condition:)","title":"case project(target: String, path: Path, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/sdk(name:type:status:condition:)","title":"case sdk(name: String, type: SDKType, status: SDKStatus, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/target(name:condition:)","title":"case target(name: String, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/xcframework(path:status:condition:)","title":"case xcframework(path: Path, status: FrameworkStatus, condition: PlatformCondition?)","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/xctest","title":"case xctest","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/typename","title":"var typeName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/sdk(name:type:condition:)","title":"static func sdk(name: String, type: SDKType, condition: PlatformCondition?) -> TargetDependency","type":"method"},{"path":"\/documentation\/projectdescription\/targetdependency\/target(_:condition:)","title":"static func target(Target, condition: PlatformCondition?) -> TargetDependency","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/packagetype\/macro","title":"case macro","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/packagetype\/plugin","title":"case plugin","type":"case"},{"path":"\/documentation\/projectdescription\/targetdependency\/packagetype\/runtime","title":"case runtime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/packagetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/packagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetdependency\/packagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetdependency\/packagetype","title":"TargetDependency.PackageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetdependency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetdependency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetdependency","title":"TargetDependency","type":"enum"},{"title":"Configure build phases","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.property","title":"var destination: CopyFilesAction.Destination","type":"property"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/files","title":"var files: [FileElement]","type":"property"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/subpath","title":"var subpath: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/executables(name:subpath:files:)","title":"static func executables(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/frameworks(name:subpath:files:)","title":"static func frameworks(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/javaresources(name:subpath:files:)","title":"static func javaResources(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/plugins(name:subpath:files:)","title":"static func plugins(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/productsdirectory(name:subpath:files:)","title":"static func productsDirectory(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/resources(name:subpath:files:)","title":"static func resources(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/sharedframeworks(name:subpath:files:)","title":"static func sharedFrameworks(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/sharedsupport(name:subpath:files:)","title":"static func sharedSupport(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/wrapper(name:subpath:files:)","title":"static func wrapper(name: String, subpath: String?, files: [FileElement]) -> CopyFilesAction","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/absolutepath","title":"case absolutePath","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/executables","title":"case executables","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/frameworks","title":"case frameworks","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/javaresources","title":"case javaResources","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/other","title":"case other","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/plugins","title":"case plugins","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/productsdirectory","title":"case productsDirectory","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/resources","title":"case resources","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/sharedframeworks","title":"case sharedFrameworks","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/sharedsupport","title":"case sharedSupport","type":"case"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/wrapper","title":"case wrapper","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/copyfilesaction\/destination-swift.enum","title":"CopyFilesAction.Destination","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/copyfilesaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/copyfilesaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/copyfilesaction","title":"CopyFilesAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/basedondependencyanalysis","title":"var basedOnDependencyAnalysis: Bool?","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/dependencyfile","title":"var dependencyFile: Path?","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/inputfilelistpaths","title":"var inputFileListPaths: [Path]","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/inputpaths","title":"var inputPaths: [FileListGlob]","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.property","title":"var order: TargetScript.Order","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/outputfilelistpaths","title":"var outputFileListPaths: [Path]","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/outputpaths","title":"var outputPaths: [Path]","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/runforinstallbuildsonly","title":"var runForInstallBuildsOnly: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/script-swift.property","title":"var script: TargetScript.Script","type":"property"},{"path":"\/documentation\/projectdescription\/targetscript\/shellpath","title":"var shellPath: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/post(path:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-1l1ty","title":"static func post(path: Path, arguments: String..., name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/post(path:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-tpdy","title":"static func post(path: Path, arguments: [String], name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/post(script:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)","title":"static func post(script: String, name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/post(tool:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-2rohu","title":"static func post(tool: String, arguments: String..., name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/post(tool:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-5tuh2","title":"static func post(tool: String, arguments: [String], name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/pre(path:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-7k2bd","title":"static func pre(path: Path, arguments: String..., name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/pre(path:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-9bema","title":"static func pre(path: Path, arguments: [String], name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/pre(script:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)","title":"static func pre(script: String, name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/pre(tool:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-36u3j","title":"static func pre(tool: String, arguments: String..., name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/pre(tool:arguments:name:inputpaths:inputfilelistpaths:outputpaths:outputfilelistpaths:basedondependencyanalysis:runforinstallbuildsonly:shellpath:dependencyfile:)-9wx84","title":"static func pre(tool: String, arguments: [String], name: String, inputPaths: [FileListGlob], inputFileListPaths: [Path], outputPaths: [Path], outputFileListPaths: [Path], basedOnDependencyAnalysis: Bool?, runForInstallBuildsOnly: Bool, shellPath: String, dependencyFile: Path?) -> TargetScript","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/post","title":"case post","type":"case"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/pre","title":"case pre","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetscript\/order-swift.enum","title":"TargetScript.Order","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum\/embedded(_:)","title":"case embedded(String)","type":"case"},{"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum\/scriptpath(path:args:)","title":"case scriptPath(path: Path, args: [String])","type":"case"},{"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum\/tool(path:args:)","title":"case tool(path: String, args: [String])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetscript\/script-swift.enum","title":"TargetScript.Script","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetscript\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetscript\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetscript","title":"TargetScript","type":"struct"},{"title":"Configuration","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/appletv","title":"case appleTv","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/applevision","title":"case appleVision","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/applevisionwithipaddesign","title":"case appleVisionWithiPadDesign","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/applewatch","title":"case appleWatch","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/ipad","title":"case iPad","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/iphone","title":"case iPhone","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/mac","title":"case mac","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/maccatalyst","title":"case macCatalyst","type":"case"},{"path":"\/documentation\/projectdescription\/destination\/macwithipaddesign","title":"case macWithiPadDesign","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/platform","title":"var platform: Platform","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/destination\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destination\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/destination\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/destination\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/destination","title":"Destination","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/product\/app","title":"case app","type":"case"},{"path":"\/documentation\/projectdescription\/product\/appclip","title":"case appClip","type":"case"},{"path":"\/documentation\/projectdescription\/product\/appextension","title":"case appExtension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/bundle","title":"case bundle","type":"case"},{"path":"\/documentation\/projectdescription\/product\/commandlinetool","title":"case commandLineTool","type":"case"},{"path":"\/documentation\/projectdescription\/product\/dynamiclibrary","title":"case dynamicLibrary","type":"case"},{"path":"\/documentation\/projectdescription\/product\/extensionkitextension","title":"case extensionKitExtension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/framework","title":"case framework","type":"case"},{"path":"\/documentation\/projectdescription\/product\/macro","title":"case macro","type":"case"},{"path":"\/documentation\/projectdescription\/product\/messagesextension","title":"case messagesExtension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/staticframework","title":"case staticFramework","type":"case"},{"path":"\/documentation\/projectdescription\/product\/staticlibrary","title":"case staticLibrary","type":"case"},{"path":"\/documentation\/projectdescription\/product\/stickerpackextension","title":"case stickerPackExtension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/systemextension","title":"case systemExtension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/tvtopshelfextension","title":"case tvTopShelfExtension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/uitests","title":"case uiTests","type":"case"},{"path":"\/documentation\/projectdescription\/product\/unittests","title":"case unitTests","type":"case"},{"path":"\/documentation\/projectdescription\/product\/watch2app","title":"case watch2App","type":"case"},{"path":"\/documentation\/projectdescription\/product\/watch2extension","title":"case watch2Extension","type":"case"},{"path":"\/documentation\/projectdescription\/product\/xpc","title":"case xpc","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/product\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/product\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/product\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/product\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/product\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/product\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/product\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/product\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/product","title":"Product","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/init(ios:macos:watchos:tvos:visionos:)","title":"init(iOS: String?, macOS: String?, watchOS: String?, tvOS: String?, visionOS: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/ios","title":"var iOS: String?","type":"property"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/macos","title":"var macOS: String?","type":"property"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/tvos","title":"var tvOS: String?","type":"property"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/visionos","title":"var visionOS: String?","type":"property"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/watchos","title":"var watchOS: String?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/subscript(_:)","title":"subscript(Platform) -> String?","type":"subscript"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/ios(_:)","title":"static func iOS(String) -> DeploymentTargets","type":"method"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/macos(_:)","title":"static func macOS(String) -> DeploymentTargets","type":"method"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/tvos(_:)","title":"static func tvOS(String) -> DeploymentTargets","type":"method"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/visionos(_:)","title":"static func visionOS(String) -> DeploymentTargets","type":"method"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/watchos(_:)","title":"static func watchOS(String) -> DeploymentTargets","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttargets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/deploymenttargets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/deploymenttargets","title":"DeploymentTargets","type":"struct"},{"children":[{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/defaultsettings\/essential(excluding:)","title":"case essential(excluding: Set<String>)","type":"case"},{"path":"\/documentation\/projectdescription\/defaultsettings\/none","title":"case none","type":"case"},{"path":"\/documentation\/projectdescription\/defaultsettings\/recommended(excluding:)","title":"case recommended(excluding: Set<String>)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/defaultsettings\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/defaultsettings\/essential","title":"static var essential: DefaultSettings","type":"property"},{"path":"\/documentation\/projectdescription\/defaultsettings\/recommended","title":"static var recommended: DefaultSettings","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/defaultsettings\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/defaultsettings\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/defaultsettings","title":"DefaultSettings","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/array(_:)","title":"case array([String])","type":"case"},{"path":"\/documentation\/projectdescription\/settingvalue\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(_:)","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(arrayliteral:)","title":"init(arrayLiteral: String...)","type":"init"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(booleanliteral:)","title":"init(booleanLiteral: Bool)","type":"init"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/booleanliteraltype","title":"SettingValue.BooleanLiteralType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/settingvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/settingvalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/settingvalue\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settingvalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/settingvalue\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/settingvalue","title":"SettingValue","type":"enum"},{"path":"\/documentation\/projectdescription\/settingsdictionary","title":"SettingsDictionary","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/name","title":"var name: ConfigurationName","type":"property"},{"path":"\/documentation\/projectdescription\/configuration\/settings","title":"var settings: SettingsDictionary","type":"property"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.property","title":"var variant: Configuration.Variant","type":"property"},{"path":"\/documentation\/projectdescription\/configuration\/xcconfig","title":"var xcconfig: Path?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/debug(name:settings:xcconfig:)","title":"static func debug(name: ConfigurationName, settings: SettingsDictionary, xcconfig: Path?) -> Configuration","type":"method"},{"path":"\/documentation\/projectdescription\/configuration\/release(name:settings:xcconfig:)","title":"static func release(name: ConfigurationName, settings: SettingsDictionary, xcconfig: Path?) -> Configuration","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/release","title":"case release","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/configuration\/variant-swift.enum","title":"Configuration.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configuration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/configuration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/configuration","title":"Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/configurationname\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/debug","title":"static var debug: ConfigurationName","type":"property"},{"path":"\/documentation\/projectdescription\/configurationname\/release","title":"static var release: ConfigurationName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/configuration(_:)","title":"static func configuration(String) -> ConfigurationName","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/configurationname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/configurationname\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/configurationname\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/configurationname\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/configurationname","title":"ConfigurationName","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftcompilationmode\/singlefile","title":"case singlefile","type":"case"},{"path":"\/documentation\/projectdescription\/swiftcompilationmode\/wholemodule","title":"case wholemodule","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftcompilationmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftcompilationmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/swiftcompilationmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftcompilationmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftcompilationmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/swiftcompilationmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/swiftcompilationmode","title":"SwiftCompilationMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/o","title":"case o","type":"case"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/onone","title":"case oNone","type":"case"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/osize","title":"case oSize","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/swiftoptimizationlevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/swiftoptimizationlevel","title":"SwiftOptimizationLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/debuginformationformat\/dwarf","title":"case dwarf","type":"case"},{"path":"\/documentation\/projectdescription\/debuginformationformat\/dwarfwithdsym","title":"case dwarfWithDsym","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/debuginformationformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/debuginformationformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/debuginformationformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/debuginformationformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/debuginformationformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/debuginformationformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/debuginformationformat","title":"DebugInformationFormat","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settings\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settings\/base","title":"var base: SettingsDictionary","type":"property"},{"path":"\/documentation\/projectdescription\/settings\/configurations","title":"var configurations: [Configuration]","type":"property"},{"path":"\/documentation\/projectdescription\/settings\/defaultsettings","title":"var defaultSettings: DefaultSettings","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settings\/settings(base:configurations:defaultsettings:)","title":"static func settings(base: SettingsDictionary, configurations: [Configuration], defaultSettings: DefaultSettings) -> Settings","type":"method"},{"path":"\/documentation\/projectdescription\/settings\/settings(base:debug:release:defaultsettings:)","title":"static func settings(base: SettingsDictionary, debug: SettingsDictionary, release: SettingsDictionary, defaultSettings: DefaultSettings) -> Settings","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/settings\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/settings\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/settings","title":"Settings","type":"struct"},{"title":"Others","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/dictionary(_:)","title":"case dictionary([String : Plist.Value])","type":"case"},{"path":"\/documentation\/projectdescription\/infoplist\/extendingdefault(with:)","title":"case extendingDefault(with: [String : Plist.Value])","type":"case"},{"path":"\/documentation\/projectdescription\/infoplist\/file(path:)","title":"case file(path: Path)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/path","title":"var path: Path?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/value","title":"InfoPlist.Value","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/default","title":"static var `default`: InfoPlist","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/codingerror\/invalidtype(_:)","title":"case invalidType(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/codingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/projectdescription\/infoplist\/codingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/infoplist\/codingerror","title":"InfoPlist.CodingError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/infoplist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/infoplist\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/infoplist\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/infoplist\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/infoplist\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/infoplist\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/infoplist","title":"InfoPlist","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/globs","title":"let globs: [FileListGlob]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/list(_:)","title":"static func list([FileListGlob]) -> FileList","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/filelist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/init(arrayliteral:)","title":"init(arrayLiteral: String...)","type":"init"}],"path":"\/documentation\/projectdescription\/filelist\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/filelist\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/filelist\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/filelist\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelist\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/filelist\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/filelist","title":"FileList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/excluding","title":"var excluding: [Path]","type":"property"},{"path":"\/documentation\/projectdescription\/filelistglob\/glob","title":"var glob: Path","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/glob(_:excluding:)-1p48w","title":"static func glob(Path, excluding: Path?) -> FileListGlob","type":"method"},{"path":"\/documentation\/projectdescription\/filelistglob\/glob(_:excluding:)-9g6ts","title":"static func glob(Path, excluding: [Path]) -> FileListGlob","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/filelistglob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/filelistglob\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/filelistglob\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/filelistglob\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filelistglob\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/filelistglob\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/filelistglob","title":"FileListGlob","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/folderreference(path:)","title":"case folderReference(path: Path)","type":"case"},{"path":"\/documentation\/projectdescription\/fileelement\/glob(pattern:)","title":"case glob(pattern: Path)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/fileelement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/fileelement\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/fileelement\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/fileelement\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileelement\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/fileelement\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/fileelement","title":"FileElement","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/coredatamodel\/init(_:currentversion:)","title":"init(Path, currentVersion: String?)","type":"init"},{"path":"\/documentation\/projectdescription\/coredatamodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/coredatamodel\/currentversion","title":"var currentVersion: String?","type":"property"},{"path":"\/documentation\/projectdescription\/coredatamodel\/path","title":"var path: Path","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/coredatamodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/coredatamodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/coredatamodel","title":"CoreDataModel","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filecodegen\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/projectdescription\/filecodegen\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/projectdescription\/filecodegen\/project","title":"case project","type":"case"},{"path":"\/documentation\/projectdescription\/filecodegen\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filecodegen\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filecodegen\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/filecodegen\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filecodegen\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filecodegen\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/filecodegen\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/filecodegen\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/filecodegen\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/filecodegen","title":"FileCodeGen","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/projectdescription\/path\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/path\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/callerpath","title":"var callerPath: String?","type":"property"},{"path":"\/documentation\/projectdescription\/path\/pathstring","title":"var pathString: String","type":"property"},{"path":"\/documentation\/projectdescription\/path\/type","title":"var type: Path.PathType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/relativetocurrentfile(_:callerpath:)","title":"static func relativeToCurrentFile(String, callerPath: StaticString) -> Path","type":"method"},{"path":"\/documentation\/projectdescription\/path\/relativetomanifest(_:)","title":"static func relativeToManifest(String) -> Path","type":"method"},{"path":"\/documentation\/projectdescription\/path\/relativetoroot(_:)","title":"static func relativeToRoot(String) -> Path","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/relativetocurrentfile","title":"case relativeToCurrentFile","type":"case"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/relativetomanifest","title":"case relativeToManifest","type":"case"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/relativetoroot","title":"case relativeToRoot","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/path\/pathtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/path\/pathtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/path\/pathtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/path\/pathtype","title":"Path.PathType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/path\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/path\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/path\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/path\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/path\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/path","title":"Path","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/target\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/target\/init(name:destinations:product:productname:bundleid:deploymenttargets:infoplist:sources:resources:copyfiles:headers:entitlements:scripts:dependencies:settings:coredatamodels:environmentvariables:launcharguments:additionalfiles:buildrules:me-iur1","title":"init(name: String, destinations: Destinations, product: Product, productName: String?, bundleId: String, deploymentTargets: DeploymentTargets?, infoPlist: InfoPlist?, sources: SourceFilesList?, resources: ResourceFileElements?, copyFiles: [CopyFilesAction]?, headers: Headers?, entitlements: Entitlements?, scripts: [TargetScript], dependencies: [TargetDependency], settings: Settings?, coreDataModels: [CoreDataModel], environmentVariables: [String : EnvironmentVariable], launchArguments: [LaunchArgument], additionalFiles: [FileElement], buildRules: [BuildRule], mergedBinaryType: MergedBinaryType, mergeable: Bool)","type":"init"},{"path":"\/documentation\/projectdescription\/target\/init(name:platform:product:productname:bundleid:deploymenttarget:infoplist:sources:resources:copyfiles:headers:entitlements:scripts:dependencies:settings:coredatamodels:environment:launcharguments:additionalfiles:buildrules:mergedbinarytype-7b7t9","title":"init(name: String, platform: Platform, product: Product, productName: String?, bundleId: String, deploymentTarget: DeploymentTarget?, infoPlist: InfoPlist?, sources: SourceFilesList?, resources: ResourceFileElements?, copyFiles: [CopyFilesAction]?, headers: Headers?, entitlements: Entitlements?, scripts: [TargetScript], dependencies: [TargetDependency], settings: Settings?, coreDataModels: [CoreDataModel], environment: [String : String], launchArguments: [LaunchArgument], additionalFiles: [FileElement], buildRules: [BuildRule], mergedBinaryType: MergedBinaryType, mergeable: Bool)","type":"init"},{"path":"\/documentation\/projectdescription\/target\/init(name:platform:product:productname:bundleid:deploymenttarget:infoplist:sources:resources:copyfiles:headers:entitlements:scripts:dependencies:settings:coredatamodels:environmentvariables:launcharguments:additionalfiles:buildrules:mergedb-9p4pm","title":"init(name: String, platform: Platform, product: Product, productName: String?, bundleId: String, deploymentTarget: DeploymentTarget?, infoPlist: InfoPlist?, sources: SourceFilesList?, resources: ResourceFileElements?, copyFiles: [CopyFilesAction]?, headers: Headers?, entitlements: Entitlements?, scripts: [TargetScript], dependencies: [TargetDependency], settings: Settings?, coreDataModels: [CoreDataModel], environmentVariables: [String : EnvironmentVariable], launchArguments: [LaunchArgument], additionalFiles: [FileElement], buildRules: [BuildRule], mergedBinaryType: MergedBinaryType, mergeable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/target\/additionalfiles","title":"var additionalFiles: [FileElement]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/buildrules","title":"var buildRules: [BuildRule]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/bundleid","title":"var bundleId: String","type":"property"},{"path":"\/documentation\/projectdescription\/target\/copyfiles","title":"var copyFiles: [CopyFilesAction]?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/coredatamodels","title":"var coreDataModels: [CoreDataModel]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/dependencies","title":"var dependencies: [TargetDependency]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/deploymenttargets","title":"var deploymentTargets: DeploymentTargets?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/destinations","title":"var destinations: Destinations","type":"property"},{"path":"\/documentation\/projectdescription\/target\/entitlements","title":"var entitlements: Entitlements?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/environmentvariables","title":"var environmentVariables: [String : EnvironmentVariable]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/headers","title":"var headers: Headers?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/infoplist","title":"var infoPlist: InfoPlist?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/launcharguments","title":"var launchArguments: [LaunchArgument]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/mergeable","title":"var mergeable: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/target\/mergedbinarytype","title":"var mergedBinaryType: MergedBinaryType","type":"property"},{"path":"\/documentation\/projectdescription\/target\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/projectdescription\/target\/product","title":"var product: Product","type":"property"},{"path":"\/documentation\/projectdescription\/target\/productname","title":"var productName: String?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/resources","title":"var resources: ResourceFileElements?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/scripts","title":"var scripts: [TargetScript]","type":"property"},{"path":"\/documentation\/projectdescription\/target\/settings","title":"var settings: Settings?","type":"property"},{"path":"\/documentation\/projectdescription\/target\/sources","title":"var sources: SourceFilesList?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/target\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/target\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/target","title":"Target","type":"struct"},{"title":"Configuring custom schemes","type":"groupMarker"},{"children":[{"title":"Actions","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/analyzeaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/analyzeaction\/configuration","title":"var configuration: ConfigurationName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/analyzeaction\/analyzeaction(configuration:)","title":"static func analyzeAction(configuration: ConfigurationName) -> AnalyzeAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/analyzeaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/analyzeaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/analyzeaction","title":"AnalyzeAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/archiveaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/archiveaction\/configuration","title":"var configuration: ConfigurationName","type":"property"},{"path":"\/documentation\/projectdescription\/archiveaction\/customarchivename","title":"var customArchiveName: String?","type":"property"},{"path":"\/documentation\/projectdescription\/archiveaction\/postactions","title":"var postActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/archiveaction\/preactions","title":"var preActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/archiveaction\/revealarchiveinorganizer","title":"var revealArchiveInOrganizer: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/archiveaction\/archiveaction(configuration:revealarchiveinorganizer:customarchivename:preactions:postactions:)","title":"static func archiveAction(configuration: ConfigurationName, revealArchiveInOrganizer: Bool, customArchiveName: String?, preActions: [ExecutionAction], postActions: [ExecutionAction]) -> ArchiveAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/archiveaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/archiveaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/archiveaction","title":"ArchiveAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/buildaction\/init(targets:preactions:postactions:runpostactionsonfailure:)","title":"init(targets: [TargetReference], preActions: [ExecutionAction], postActions: [ExecutionAction], runPostActionsOnFailure: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildaction\/postactions","title":"var postActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/buildaction\/preactions","title":"var preActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/buildaction\/runpostactionsonfailure","title":"var runPostActionsOnFailure: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/buildaction\/targets","title":"var targets: [TargetReference]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildaction\/buildaction(targets:preactions:postactions:runpostactionsonfailure:)","title":"static func buildAction(targets: [TargetReference], preActions: [ExecutionAction], postActions: [ExecutionAction], runPostActionsOnFailure: Bool) -> BuildAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/buildaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/buildaction","title":"BuildAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/profileaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/profileaction\/arguments","title":"var arguments: Arguments?","type":"property"},{"path":"\/documentation\/projectdescription\/profileaction\/configuration","title":"var configuration: ConfigurationName","type":"property"},{"path":"\/documentation\/projectdescription\/profileaction\/executable","title":"var executable: TargetReference?","type":"property"},{"path":"\/documentation\/projectdescription\/profileaction\/postactions","title":"var postActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/profileaction\/preactions","title":"var preActions: [ExecutionAction]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/profileaction\/profileaction(configuration:preactions:postactions:executable:arguments:)","title":"static func profileAction(configuration: ConfigurationName, preActions: [ExecutionAction], postActions: [ExecutionAction], executable: TargetReference?, arguments: Arguments?) -> ProfileAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/profileaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/profileaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/profileaction","title":"ProfileAction","type":"struct"},{"children":[{"title":"Configuration","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testactionoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testactionoptions\/codecoveragetargets","title":"var codeCoverageTargets: [TargetReference]","type":"property"},{"path":"\/documentation\/projectdescription\/testactionoptions\/coverage","title":"var coverage: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/testactionoptions\/language","title":"var language: SchemeLanguage?","type":"property"},{"path":"\/documentation\/projectdescription\/testactionoptions\/preferredscreencaptureformat","title":"var preferredScreenCaptureFormat: ScreenCaptureFormat?","type":"property"},{"path":"\/documentation\/projectdescription\/testactionoptions\/region","title":"var region: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testactionoptions\/options(language:region:preferredscreencaptureformat:coverage:codecoveragetargets:)","title":"static func options(language: SchemeLanguage?, region: String?, preferredScreenCaptureFormat: ScreenCaptureFormat?, coverage: Bool, codeCoverageTargets: [TargetReference]) -> TestActionOptions","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testactionoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/testactionoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/testactionoptions","title":"TestActionOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testabletarget\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/testabletarget\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"path":"\/documentation\/projectdescription\/testabletarget\/init(target:skipped:parallelizable:randomexecutionordering:)","title":"init(target: TargetReference, skipped: Bool, parallelizable: Bool, randomExecutionOrdering: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testabletarget\/isparallelizable","title":"var isParallelizable: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/testabletarget\/israndomexecutionordering","title":"var isRandomExecutionOrdering: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/testabletarget\/isskipped","title":"var isSkipped: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/testabletarget\/target","title":"var target: TargetReference","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testabletarget\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/testabletarget\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testabletarget\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/testabletarget\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testabletarget\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/testabletarget\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testabletarget\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/testabletarget\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/testabletarget","title":"TestableTarget","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runaction\/arguments","title":"var arguments: Arguments?","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/attachdebugger","title":"var attachDebugger: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/configuration","title":"var configuration: ConfigurationName","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/customlldbinitfile","title":"var customLLDBInitFile: Path?","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/diagnosticsoptions","title":"var diagnosticsOptions: [SchemeDiagnosticsOption]","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/executable","title":"var executable: TargetReference?","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/expandvariablefromtarget","title":"var expandVariableFromTarget: TargetReference?","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/launchstyle","title":"var launchStyle: LaunchStyle","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/options","title":"var options: RunActionOptions","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/postactions","title":"var postActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/runaction\/preactions","title":"var preActions: [ExecutionAction]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runaction\/runaction(configuration:attachdebugger:customlldbinitfile:preactions:postactions:executable:arguments:options:diagnosticsoptions:expandvariablefromtarget:launchstyle:)","title":"static func runAction(configuration: ConfigurationName, attachDebugger: Bool, customLLDBInitFile: Path?, preActions: [ExecutionAction], postActions: [ExecutionAction], executable: TargetReference?, arguments: Arguments?, options: RunActionOptions, diagnosticsOptions: [SchemeDiagnosticsOption], expandVariableFromTarget: TargetReference?, launchStyle: LaunchStyle) -> RunAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/runaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/runaction","title":"RunAction","type":"struct"},{"children":[{"title":"Configuration","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/gpxfile","title":"var gpxFile: Path?","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/identifier","title":"var identifier: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/hongkong","title":"static var hongKong: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/honolulu","title":"static var honolulu: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/johannesburg","title":"static var johannesburg: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/london","title":"static var london: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/mexicocity","title":"static var mexicoCity: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/moscow","title":"static var moscow: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/mumbai","title":"static var mumbai: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/newyork","title":"static var newYork: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/riodejaneiro","title":"static var rioDeJaneiro: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/sanfrancisco","title":"static var sanFrancisco: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/sydney","title":"static var sydney: RunActionOptions.SimulatedLocation","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/tokyo","title":"static var tokyo: RunActionOptions.SimulatedLocation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/custom(gpxfile:)","title":"static func custom(gpxFile: Path) -> RunActionOptions.SimulatedLocation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.struct","title":"RunActionOptions.SimulatedLocation","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/enablegpuframecapturemode","title":"var enableGPUFrameCaptureMode: RunActionOptions.GPUFrameCaptureMode","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/language","title":"var language: SchemeLanguage?","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/region","title":"var region: String?","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/simulatedlocation-swift.property","title":"var simulatedLocation: RunActionOptions.SimulatedLocation?","type":"property"},{"path":"\/documentation\/projectdescription\/runactionoptions\/storekitconfigurationpath","title":"var storeKitConfigurationPath: Path?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/options(language:storekitconfigurationpath:simulatedlocation:enablegpuframecapturemode:)","title":"static func options(language: SchemeLanguage?, storeKitConfigurationPath: Path?, simulatedLocation: RunActionOptions.SimulatedLocation?, enableGPUFrameCaptureMode: RunActionOptions.GPUFrameCaptureMode) -> RunActionOptions","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/autoenabled","title":"case autoEnabled","type":"case"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/metal","title":"case metal","type":"case"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/opengl","title":"case openGL","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/default","title":"static var `default`: RunActionOptions.GPUFrameCaptureMode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/runactionoptions\/gpuframecapturemode","title":"RunActionOptions.GPUFrameCaptureMode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/runactionoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/runactionoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/runactionoptions","title":"RunActionOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testaction\/arguments","title":"var arguments: Arguments?","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/attachdebugger","title":"var attachDebugger: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/configuration","title":"var configuration: ConfigurationName","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/diagnosticsoptions","title":"var diagnosticsOptions: [SchemeDiagnosticsOption]","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/expandvariablefromtarget","title":"var expandVariableFromTarget: TargetReference?","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/options","title":"var options: TestActionOptions","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/postactions","title":"var postActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/preactions","title":"var preActions: [ExecutionAction]","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/targets","title":"var targets: [TestableTarget]","type":"property"},{"path":"\/documentation\/projectdescription\/testaction\/testplans","title":"var testPlans: [Path]?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testaction\/targets(_:arguments:configuration:attachdebugger:expandvariablefromtarget:preactions:postactions:options:diagnosticsoptions:)","title":"static func targets([TestableTarget], arguments: Arguments?, configuration: ConfigurationName, attachDebugger: Bool, expandVariableFromTarget: TargetReference?, preActions: [ExecutionAction], postActions: [ExecutionAction], options: TestActionOptions, diagnosticsOptions: [SchemeDiagnosticsOption]) -> TestAction","type":"method"},{"path":"\/documentation\/projectdescription\/testaction\/testplans(_:configuration:attachdebugger:preactions:postactions:)","title":"static func testPlans([Path], configuration: ConfigurationName, attachDebugger: Bool, preActions: [ExecutionAction], postActions: [ExecutionAction]) -> TestAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/testaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/testaction","title":"TestAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/executionaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/executionaction\/init(title:scripttext:target:shellpath:)","title":"init(title: String, scriptText: String, target: TargetReference?, shellPath: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/executionaction\/scripttext","title":"var scriptText: String","type":"property"},{"path":"\/documentation\/projectdescription\/executionaction\/shellpath","title":"var shellPath: String?","type":"property"},{"path":"\/documentation\/projectdescription\/executionaction\/target","title":"var target: TargetReference?","type":"property"},{"path":"\/documentation\/projectdescription\/executionaction\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/executionaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/executionaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/executionaction","title":"ExecutionAction","type":"struct"},{"title":"Schemes configuration","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/launchargument\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/launchargument\/init(name:isenabled:)","title":"init(name: String, isEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/launchargument\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/launchargument\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/launchargument\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/launchargument\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/launchargument","title":"LaunchArgument","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/arguments\/init(environment:launcharguments:)","title":"init(environment: [String : String], launchArguments: [LaunchArgument])","type":"init"},{"path":"\/documentation\/projectdescription\/arguments\/init(environmentvariables:launcharguments:)","title":"init(environmentVariables: [String : EnvironmentVariable], launchArguments: [LaunchArgument])","type":"init"},{"path":"\/documentation\/projectdescription\/arguments\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/arguments\/init(launcharguments:)","title":"init(launchArguments: [LaunchArgument])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/arguments\/environmentvariables","title":"var environmentVariables: [String : EnvironmentVariable]","type":"property"},{"path":"\/documentation\/projectdescription\/arguments\/launcharguments","title":"var launchArguments: [LaunchArgument]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/arguments\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/arguments\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/arguments","title":"Arguments","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/enableaddresssanitizer","title":"case enableAddressSanitizer","type":"case"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/enabledetectstackuseafterreturn","title":"case enableDetectStackUseAfterReturn","type":"case"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/enablethreadsanitizer","title":"case enableThreadSanitizer","type":"case"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/mainthreadchecker","title":"case mainThreadChecker","type":"case"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/performanceantipatternchecker","title":"case performanceAntipatternChecker","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/schemediagnosticsoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/schemediagnosticsoption","title":"SchemeDiagnosticsOption","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemelanguage\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/schemelanguage\/init(identifier:)","title":"init(identifier: String)","type":"init"},{"path":"\/documentation\/projectdescription\/schemelanguage\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemelanguage\/identifier","title":"let identifier: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemelanguage\/accentedpseudolanguage","title":"static var accentedPseudoLanguage: SchemeLanguage","type":"property"},{"path":"\/documentation\/projectdescription\/schemelanguage\/boundedstringpseudolanguage","title":"static var boundedStringPseudoLanguage: SchemeLanguage","type":"property"},{"path":"\/documentation\/projectdescription\/schemelanguage\/doublelengthpseudolanguage","title":"static var doubleLengthPseudoLanguage: SchemeLanguage","type":"property"},{"path":"\/documentation\/projectdescription\/schemelanguage\/righttoleftpseudolanguage","title":"static var rightToLeftPseudoLanguage: SchemeLanguage","type":"property"},{"path":"\/documentation\/projectdescription\/schemelanguage\/righttoleftwithstringspseudolanguage","title":"static var rightToLeftWithStringsPseudoLanguage: SchemeLanguage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemelanguage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/schemelanguage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemelanguage\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/schemelanguage\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/schemelanguage\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/schemelanguage\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/schemelanguage","title":"SchemeLanguage","type":"struct"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environment\/value\/string(_:)","title":"case string(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environment\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/environment\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/environment\/value","title":"Environment.Value","type":"enum"},{"title":"Type Subscripts","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environment\/subscript(dynamicmember:)","title":"static subscript(dynamicMember _: String) -> Environment.Value?","type":"subscript"}],"path":"\/documentation\/projectdescription\/environment","title":"Environment","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/parallelizable","title":"static let parallelizable: TestingOptions","type":"property"},{"path":"\/documentation\/projectdescription\/testingoptions\/randomexecutionordering","title":"static let randomExecutionOrdering: TestingOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/testingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/projectdescription\/testingoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/projectdescription\/testingoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/projectdescription\/testingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/testingoptions","title":"TestingOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/targetreference\/init(projectpath:target:)","title":"init(projectPath: Path?, target: String)","type":"init"},{"path":"\/documentation\/projectdescription\/targetreference\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/projectpath","title":"var projectPath: Path?","type":"property"},{"path":"\/documentation\/projectdescription\/targetreference\/targetname","title":"var targetName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/project(path:target:)","title":"static func project(path: Path, target: String) -> TargetReference","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/targetreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/targetreference\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/targetreference\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/targetreference\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/targetreference\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/targetreference","title":"TargetReference","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/scheme\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/scheme\/init(name:shared:hidden:buildaction:testaction:runaction:archiveaction:profileaction:analyzeaction:)","title":"init(name: String, shared: Bool, hidden: Bool, buildAction: BuildAction?, testAction: TestAction?, runAction: RunAction?, archiveAction: ArchiveAction?, profileAction: ProfileAction?, analyzeAction: AnalyzeAction?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/scheme\/analyzeaction","title":"var analyzeAction: AnalyzeAction?","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/archiveaction","title":"var archiveAction: ArchiveAction?","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/buildaction","title":"var buildAction: BuildAction?","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/profileaction","title":"var profileAction: ProfileAction?","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/runaction","title":"var runAction: RunAction?","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/shared","title":"var shared: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/scheme\/testaction","title":"var testAction: TestAction?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/scheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/scheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/scheme","title":"Scheme","type":"struct"},{"title":"Others","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/indentwidth","title":"var indentWidth: UInt?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/tabwidth","title":"var tabWidth: UInt?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/usestabs","title":"var usesTabs: Bool?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/wrapslines","title":"var wrapsLines: Bool?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/textsettings(usestabs:indentwidth:tabwidth:wrapslines:)","title":"static func textSettings(usesTabs: Bool?, indentWidth: UInt?, tabWidth: UInt?, wrapsLines: Bool?) -> Project.Options.TextSettings","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.struct","title":"Project.Options.TextSettings","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.property","title":"var automaticSchemesOptions: Project.Options.AutomaticSchemesOptions","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/defaultknownregions","title":"var defaultKnownRegions: [String]?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/developmentregion","title":"var developmentRegion: String?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/disablebundleaccessors","title":"var disableBundleAccessors: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/disableshowenvironmentvarsinscriptphases","title":"var disableShowEnvironmentVarsInScriptPhases: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/disablesynthesizedresourceaccessors","title":"var disableSynthesizedResourceAccessors: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/textsettings-swift.property","title":"var textSettings: Project.Options.TextSettings","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/xcodeprojectname","title":"var xcodeProjectName: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/options(automaticschemesoptions:defaultknownregions:developmentregion:disablebundleaccessors:disableshowenvironmentvarsinscriptphases:disablesynthesizedresourceaccessors:textsettings:xcodeprojectname:)","title":"static func options(automaticSchemesOptions: Project.Options.AutomaticSchemesOptions, defaultKnownRegions: [String]?, developmentRegion: String?, disableBundleAccessors: Bool, disableShowEnvironmentVarsInScriptPhases: Bool, disableSynthesizedResourceAccessors: Bool, textSettings: Project.Options.TextSettings, xcodeProjectName: String?) -> Project.Options","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/enabled(targetschemesgrouping:codecoverageenabled:testingoptions:testlanguage:testregion:testscreencaptureformat:runlanguage:runregion:)","title":"case enabled(targetSchemesGrouping: Project.Options.AutomaticSchemesOptions.TargetSchemesGrouping, codeCoverageEnabled: Bool, testingOptions: TestingOptions, testLanguage: SchemeLanguage?, testRegion: String?, testScreenCaptureFormat: ScreenCaptureFormat?, runLanguage: SchemeLanguage?, runRegion: String?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping\/bynamesuffix(build:test:run:)","title":"case byNameSuffix(build: Set<String>, test: Set<String>, run: Set<String>)","type":"case"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping\/notgrouped","title":"case notGrouped","type":"case"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping\/singlescheme","title":"case singleScheme","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/targetschemesgrouping","title":"Project.Options.AutomaticSchemesOptions.TargetSchemesGrouping","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/automaticschemesoptions-swift.enum","title":"Project.Options.AutomaticSchemesOptions","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/project\/options-swift.struct","title":"Project.Options","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/parallelizable","title":"static let parallelizable: TestingOptions","type":"property"},{"path":"\/documentation\/projectdescription\/testingoptions\/randomexecutionordering","title":"static let randomExecutionOrdering: TestingOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/testingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/projectdescription\/testingoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/projectdescription\/testingoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/projectdescription\/testingoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/testingoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/testingoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/projectdescription\/testingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/testingoptions","title":"TestingOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/file(_:)","title":"case file(Path)","type":"case"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/fileheadertemplate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/fileheadertemplate\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/fileheadertemplate\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/fileheadertemplate\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/fileheadertemplate\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/fileheadertemplate","title":"FileHeaderTemplate","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/extensions","title":"var extensions: Set<String>","type":"property"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.property","title":"var parser: ResourceSynthesizer.Parser","type":"property"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parseroptions","title":"var parserOptions: [String : ResourceSynthesizer.Parser.Option]","type":"property"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.property","title":"var templateType: ResourceSynthesizer.TemplateType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/assets(parseroptions:)","title":"static func assets(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/assets(plugin:parseroptions:)","title":"static func assets(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/coredata(parseroptions:)","title":"static func coreData(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/coredata(plugin:parseroptions:)","title":"static func coreData(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/custom(name:parser:parseroptions:extensions:)","title":"static func custom(name: String, parser: ResourceSynthesizer.Parser, parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/custom(plugin:parser:parseroptions:extensions:resourcename:)","title":"static func custom(plugin: String, parser: ResourceSynthesizer.Parser, parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>, resourceName: String) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/files(parseroptions:extensions:)","title":"static func files(parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/files(plugin:parseroptions:extensions:)","title":"static func files(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option], extensions: Set<String>) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/fonts(parseroptions:)","title":"static func fonts(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/fonts(plugin:parseroptions:)","title":"static func fonts(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/interfacebuilder(parseroptions:)","title":"static func interfaceBuilder(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/interfacebuilder(plugin:parseroptions:)","title":"static func interfaceBuilder(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/json(parseroptions:)","title":"static func json(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/json(plugin:parseroptions:)","title":"static func json(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/plists(parseroptions:)","title":"static func plists(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/plists(plugin:parseroptions:)","title":"static func plists(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/strings(parseroptions:)","title":"static func strings(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/strings(plugin:parseroptions:)","title":"static func strings(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/yaml(parseroptions:)","title":"static func yaml(parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/yaml(plugin:parseroptions:)","title":"static func yaml(plugin: String, parserOptions: [String : ResourceSynthesizer.Parser.Option]) -> ResourceSynthesizer","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/assets","title":"case assets","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/coredata","title":"case coreData","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/files","title":"case files","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/fonts","title":"case fonts","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/interfacebuilder","title":"case interfaceBuilder","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/json","title":"case json","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/plists","title":"case plists","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/strings","title":"case strings","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/yaml","title":"case yaml","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/array(_:)","title":"case array([ResourceSynthesizer.Parser.Option])","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/dictionary(_:)","title":"case dictionary([String : ResourceSynthesizer.Parser.Option])","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/double(_:)","title":"case double(Double)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/integer(_:)","title":"case integer(Int)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(arrayliteral:)","title":"init(arrayLiteral: ResourceSynthesizer.Parser.Option...)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(booleanliteral:)","title":"init(booleanLiteral: Bool)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, ResourceSynthesizer.Parser.Option)...)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/option","title":"ResourceSynthesizer.Parser.Option","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/parser-swift.enum","title":"ResourceSynthesizer.Parser","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/defaulttemplate(resourcename:)","title":"case defaultTemplate(resourceName: String)","type":"case"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/plugin(name:resourcename:)","title":"case plugin(name: String, resourceName: String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/templatetype-swift.enum","title":"ResourceSynthesizer.TemplateType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/resourcesynthesizer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/resourcesynthesizer","title":"ResourceSynthesizer","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/project\/init(name:organizationname:options:packages:settings:targets:schemes:fileheadertemplate:additionalfiles:resourcesynthesizers:)","title":"init(name: String, organizationName: String?, options: Project.Options, packages: [Package], settings: Settings?, targets: [Target], schemes: [Scheme], fileHeaderTemplate: FileHeaderTemplate?, additionalFiles: [FileElement], resourceSynthesizers: [ResourceSynthesizer])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/additionalfiles","title":"let additionalFiles: [FileElement]","type":"property"},{"path":"\/documentation\/projectdescription\/project\/fileheadertemplate","title":"let fileHeaderTemplate: FileHeaderTemplate?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/projectdescription\/project\/options-swift.property","title":"let options: Project.Options","type":"property"},{"path":"\/documentation\/projectdescription\/project\/organizationname","title":"let organizationName: String?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/packages","title":"let packages: [Package]","type":"property"},{"path":"\/documentation\/projectdescription\/project\/resourcesynthesizers","title":"let resourceSynthesizers: [ResourceSynthesizer]","type":"property"},{"path":"\/documentation\/projectdescription\/project\/schemes","title":"let schemes: [Scheme]","type":"property"},{"path":"\/documentation\/projectdescription\/project\/settings","title":"let settings: Settings?","type":"property"},{"path":"\/documentation\/projectdescription\/project\/targets","title":"let targets: [Target]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/project\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/project\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/project","title":"Project","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.property","title":"var autogeneratedWorkspaceSchemes: Workspace.GenerationOptions.AutogeneratedWorkspaceSchemes","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/enableautomaticxcodeschemes","title":"var enableAutomaticXcodeSchemes: Bool?","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/lastxcodeupgradecheck","title":"var lastXcodeUpgradeCheck: Version?","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/rendermarkdownreadme","title":"var renderMarkdownReadme: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/options(enableautomaticxcodeschemes:autogeneratedworkspaceschemes:lastxcodeupgradecheck:rendermarkdownreadme:)","title":"static func options(enableAutomaticXcodeSchemes: Bool?, autogeneratedWorkspaceSchemes: Workspace.GenerationOptions.AutogeneratedWorkspaceSchemes, lastXcodeUpgradeCheck: Version?, renderMarkdownReadme: Bool) -> Workspace.GenerationOptions","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/enabled(codecoveragemode:testingoptions:testlanguage:testregion:testscreencaptureformat:)","title":"case enabled(codeCoverageMode: Workspace.GenerationOptions.AutogeneratedWorkspaceSchemes.CodeCoverageMode, testingOptions: TestingOptions, testLanguage: SchemeLanguage?, testRegion: String?, testScreenCaptureFormat: ScreenCaptureFormat?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/all","title":"case all","type":"case"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/relevant","title":"case relevant","type":"case"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/targets(_:)","title":"case targets([TargetReference])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/codecoveragemode","title":"Workspace.GenerationOptions.AutogeneratedWorkspaceSchemes.CodeCoverageMode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/autogeneratedworkspaceschemes-swift.enum","title":"Workspace.GenerationOptions.AutogeneratedWorkspaceSchemes","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.struct","title":"Workspace.GenerationOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/workspace\/init(name:projects:schemes:fileheadertemplate:additionalfiles:generationoptions:)","title":"init(name: String, projects: [Path], schemes: [Scheme], fileHeaderTemplate: FileHeaderTemplate?, additionalFiles: [FileElement], generationOptions: Workspace.GenerationOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/additionalfiles","title":"let additionalFiles: [FileElement]","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/fileheadertemplate","title":"let fileHeaderTemplate: FileHeaderTemplate?","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/generationoptions-swift.property","title":"let generationOptions: Workspace.GenerationOptions","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/projects","title":"let projects: [Path]","type":"property"},{"path":"\/documentation\/projectdescription\/workspace\/schemes","title":"let schemes: [Scheme]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/workspace\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/workspace\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/workspace","title":"Workspace","type":"struct"},{"title":"Managing Dependencies","type":"groupMarker"},{"children":[{"title":"Managing Swift Package Manager dependencies","type":"groupMarker"},{"children":[{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/local(path:)","title":"case local(path: Path)","type":"case"},{"path":"\/documentation\/projectdescription\/package\/remote(url:requirement:)","title":"case remote(url: String, requirement: Package.Requirement)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/package(path:)","title":"static func package(path: Path) -> Package","type":"method"},{"path":"\/documentation\/projectdescription\/package\/package(url:_:)-6aewo","title":"static func package(url: String, ClosedRange<Version>) -> Package","type":"method"},{"path":"\/documentation\/projectdescription\/package\/package(url:_:)-82ei5","title":"static func package(url: String, Range<Version>) -> Package","type":"method"},{"path":"\/documentation\/projectdescription\/package\/package(url:_:)-9vd6s","title":"static func package(url: String, Package.Requirement) -> Package","type":"method"},{"path":"\/documentation\/projectdescription\/package\/package(url:from:)","title":"static func package(url: String, from: Version) -> Package","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/requirement\/branch(_:)","title":"case branch(String)","type":"case"},{"path":"\/documentation\/projectdescription\/package\/requirement\/exact(_:)","title":"case exact(Version)","type":"case"},{"path":"\/documentation\/projectdescription\/package\/requirement\/range(from:to:)","title":"case range(from: Version, to: Version)","type":"case"},{"path":"\/documentation\/projectdescription\/package\/requirement\/revision(_:)","title":"case revision(String)","type":"case"},{"path":"\/documentation\/projectdescription\/package\/requirement\/uptonextmajor(from:)","title":"case upToNextMajor(from: Version)","type":"case"},{"path":"\/documentation\/projectdescription\/package\/requirement\/uptonextminor(from:)","title":"case upToNextMinor(from: Version)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/requirement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/requirement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/package\/requirement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/package\/requirement","title":"Package.Requirement","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/package\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/package\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/package","title":"Package","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/init(_:producttypes:basesettings:targetsettings:projectoptions:)","title":"init([Package], productTypes: [String : Product], baseSettings: Settings, targetSettings: [String : SettingsDictionary], projectOptions: [String : Project.Options])","type":"init"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/init(producttypes:basesettings:targetsettings:projectoptions:)","title":"init(productTypes: [String : Product], baseSettings: Settings, targetSettings: [String : SettingsDictionary], projectOptions: [String : Project.Options])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/basesettings","title":"var baseSettings: Settings","type":"property"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/packagesormanifest","title":"var packagesOrManifest: PackagesOrManifest","type":"property"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/producttypes","title":"var productTypes: [String : Product]","type":"property"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/projectoptions","title":"var projectOptions: [String : Project.Options]","type":"property"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/targetsettings","title":"var targetSettings: [String : SettingsDictionary]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/swiftpackagemanagerdependencies","title":"SwiftPackageManagerDependencies","type":"struct"},{"title":"Managing Carthage dependencies","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/init(_:)","title":"init([CarthageDependencies.Dependency])","type":"init"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/dependencies","title":"var dependencies: [CarthageDependencies.Dependency]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency\/binary(path:requirement:)","title":"case binary(path: String, requirement: CarthageDependencies.Requirement)","type":"case"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency\/git(path:requirement:)","title":"case git(path: String, requirement: CarthageDependencies.Requirement)","type":"case"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency\/github(path:requirement:)","title":"case github(path: String, requirement: CarthageDependencies.Requirement)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/carthagedependencies\/dependency","title":"CarthageDependencies.Dependency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/atleast(_:)","title":"case atLeast(Version)","type":"case"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/branch(_:)","title":"case branch(String)","type":"case"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/exact(_:)","title":"case exact(Version)","type":"case"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/revision(_:)","title":"case revision(String)","type":"case"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/uptonext(_:)","title":"case upToNext(Version)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/carthagedependencies\/requirement","title":"CarthageDependencies.Requirement","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/carthagedependencies\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/carthagedependencies\/init(arrayliteral:)","title":"init(arrayLiteral: CarthageDependencies.Dependency...)","type":"init"}],"path":"\/documentation\/projectdescription\/carthagedependencies\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/carthagedependencies","title":"CarthageDependencies","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/dependencies\/init(carthage:swiftpackagemanager:platforms:)","title":"init(carthage: CarthageDependencies?, swiftPackageManager: SwiftPackageManagerDependencies?, platforms: Set<PackagePlatform>)","type":"init"},{"path":"\/documentation\/projectdescription\/dependencies\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/dependencies\/carthage","title":"let carthage: CarthageDependencies?","type":"property"},{"path":"\/documentation\/projectdescription\/dependencies\/platforms","title":"let platforms: Set<PackagePlatform>","type":"property"},{"path":"\/documentation\/projectdescription\/dependencies\/swiftpackagemanager","title":"let swiftPackageManager: SwiftPackageManagerDependencies?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/dependencies\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/dependencies\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/dependencies","title":"Dependencies","type":"struct"},{"title":"Plugin and Configuration","type":"groupMarker"},{"children":[{"title":"Related","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/profile\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/profile\/configuration","title":"var configuration: String","type":"property"},{"path":"\/documentation\/projectdescription\/cache\/profile\/device","title":"var device: String?","type":"property"},{"path":"\/documentation\/projectdescription\/cache\/profile\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/projectdescription\/cache\/profile\/os","title":"var os: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/profile\/profile(name:configuration:device:os:)","title":"static func profile(name: String, configuration: String, device: String?, os: String?) -> Cache.Profile","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/profile\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/cache\/profile\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/cache\/profile","title":"Cache.Profile","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/path","title":"var path: Path?","type":"property"},{"path":"\/documentation\/projectdescription\/cache\/profiles","title":"var profiles: [Cache.Profile]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/cache(profiles:path:)","title":"static func cache(profiles: [Cache.Profile], path: Path?) -> Cache","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cache\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/cache\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/cache","title":"Cache","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/options","title":"var options: [Cloud.Option]","type":"property"},{"path":"\/documentation\/projectdescription\/cloud\/projectid","title":"var projectId: String","type":"property"},{"path":"\/documentation\/projectdescription\/cloud\/url","title":"var url: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/cloud(projectid:url:options:)","title":"static func cloud(projectId: String, url: String, options: [Cloud.Option]) -> Cloud","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/option\/analytics","title":"case analytics","type":"case"},{"path":"\/documentation\/projectdescription\/cloud\/option\/disableanalytics","title":"case disableAnalytics","type":"case"},{"path":"\/documentation\/projectdescription\/cloud\/option\/optional","title":"case optional","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/option\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/cloud\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/option\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/option\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/option\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/cloud\/option\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/cloud\/option\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/cloud\/option","title":"Cloud.Option","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/cloud\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/cloud\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/cloud","title":"Cloud","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/all","title":"case all","type":"case"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/exact(_:)","title":"case exact(Version)","type":"case"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/list(_:)","title":"case list([CompatibleXcodeVersions])","type":"case"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/uptonextmajor(_:)","title":"case upToNextMajor(Version)","type":"case"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/uptonextminor(_:)","title":"case upToNextMinor(Version)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(arrayliteral:)-10jdp","title":"init(arrayLiteral: CompatibleXcodeVersions...)","type":"init"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(arrayliteral:)-37u9l","title":"init(arrayLiteral: [CompatibleXcodeVersions])","type":"init"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/compatiblexcodeversions\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/compatiblexcodeversions","title":"CompatibleXcodeVersions","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plugin\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/plugin\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plugin\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plugin\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/plugin\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/plugin","title":"Plugin","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/type","title":"var type: PluginLocation.LocationType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/git(url:sha:directory:)","title":"static func git(url: String, sha: String, directory: String?) -> PluginLocation","type":"method"},{"path":"\/documentation\/projectdescription\/pluginlocation\/git(url:tag:directory:releaseurl:)","title":"static func git(url: String, tag: String, directory: String?, releaseUrl: String?) -> PluginLocation","type":"method"},{"path":"\/documentation\/projectdescription\/pluginlocation\/local(path:)","title":"static func local(path: Path) -> PluginLocation","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype\/gitwithsha(url:sha:directory:)","title":"case gitWithSha(url: String, sha: String, directory: String?)","type":"case"},{"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype\/gitwithtag(url:tag:directory:releaseurl:)","title":"case gitWithTag(url: String, tag: String, directory: String?, releaseUrl: String?)","type":"case"},{"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype\/local(path:)","title":"case local(path: Path)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/pluginlocation\/locationtype","title":"PluginLocation.LocationType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/pluginlocation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/pluginlocation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/pluginlocation","title":"PluginLocation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/init(_:_:_:prereleaseidentifiers:buildmetadataidentifiers:)","title":"init(Int, Int, Int, prereleaseIdentifiers: [String], buildMetadataIdentifiers: [String])","type":"init"},{"path":"\/documentation\/projectdescription\/version\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/version\/init(string:)","title":"init?(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/buildmetadataidentifiers","title":"var buildMetadataIdentifiers: [String]","type":"property"},{"path":"\/documentation\/projectdescription\/version\/major","title":"var major: Int","type":"property"},{"path":"\/documentation\/projectdescription\/version\/minor","title":"var minor: Int","type":"property"},{"path":"\/documentation\/projectdescription\/version\/patch","title":"var patch: Int","type":"property"},{"path":"\/documentation\/projectdescription\/version\/prereleaseidentifiers","title":"var prereleaseIdentifiers: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/'...(_:)-5xbv1","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/version\/'...(_:)-80y0j","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/version\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/version\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/version\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/projectdescription\/version\/_(_:_:)-4e038","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/projectdescription\/version\/_(_:_:)-u3l4","title":"static func < (Version, Version) -> Bool","type":"op"},{"path":"\/documentation\/projectdescription\/version\/_=(_:_:)-1px80","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/projectdescription\/version\/_=(_:_:)-4fh","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/version\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/projectdescription\/version\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/version\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/version\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/version\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/version\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/version\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/version\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/version","title":"Version","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/clonedsourcepackagesdirpath","title":"var clonedSourcePackagesDirPath: Path?","type":"property"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/disablepackageversionlocking","title":"var disablePackageVersionLocking: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/enforceexplicitdependencies","title":"let enforceExplicitDependencies: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/resolvedependencieswithsystemscm","title":"var resolveDependenciesWithSystemScm: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.property","title":"var staticSideEffectsWarningTargets: Config.GenerationOptions.StaticSideEffectsWarningTargets","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/options(resolvedependencieswithsystemscm:disablepackageversionlocking:clonedsourcepackagesdirpath:staticsideeffectswarningtargets:enforceexplicitdependencies:)","title":"static func options(resolveDependenciesWithSystemScm: Bool, disablePackageVersionLocking: Bool, clonedSourcePackagesDirPath: Path?, staticSideEffectsWarningTargets: Config.GenerationOptions.StaticSideEffectsWarningTargets, enforceExplicitDependencies: Bool) -> Config.GenerationOptions","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum\/all","title":"case all","type":"case"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum\/excluding(_:)","title":"case excluding([String])","type":"case"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/staticsideeffectswarningtargets-swift.enum","title":"Config.GenerationOptions.StaticSideEffectsWarningTargets","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.struct","title":"Config.GenerationOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/init(compatiblexcodeversions:cloud:cache:swiftversion:plugins:generationoptions:)","title":"init(compatibleXcodeVersions: CompatibleXcodeVersions, cloud: Cloud?, cache: Cache?, swiftVersion: Version?, plugins: [PluginLocation], generationOptions: Config.GenerationOptions)","type":"init"},{"path":"\/documentation\/projectdescription\/config\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/cache","title":"let cache: Cache?","type":"property"},{"path":"\/documentation\/projectdescription\/config\/cloud","title":"let cloud: Cloud?","type":"property"},{"path":"\/documentation\/projectdescription\/config\/compatiblexcodeversions","title":"let compatibleXcodeVersions: CompatibleXcodeVersions","type":"property"},{"path":"\/documentation\/projectdescription\/config\/generationoptions-swift.property","title":"let generationOptions: Config.GenerationOptions","type":"property"},{"path":"\/documentation\/projectdescription\/config\/plugins","title":"let plugins: [PluginLocation]","type":"property"},{"path":"\/documentation\/projectdescription\/config\/swiftversion","title":"let swiftVersion: Version?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/config\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/config\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/config","title":"Config","type":"struct"},{"title":"Scaffolding","type":"groupMarker"},{"children":[{"title":"Configuration","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/token\/projectname","title":"case projectName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/token\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/token\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/templatestring\/token\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/token\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/token\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/templatestring\/token\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/templatestring\/token","title":"TemplateString.Token","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/projectdescription\/templatestring\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/templatestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/templatestring\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/stringinterpolation\/init(literalcapacity:interpolationcount:)","title":"init(literalCapacity: Int, interpolationCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/stringinterpolation\/appendinterpolation(_:)","title":"func appendInterpolation(TemplateString.Token)","type":"method"},{"path":"\/documentation\/projectdescription\/templatestring\/stringinterpolation\/appendliteral(_:)","title":"func appendLiteral(String)","type":"method"}],"path":"\/documentation\/projectdescription\/templatestring\/stringinterpolation","title":"TemplateString.StringInterpolation","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/init(stringinterpolation:)","title":"init(stringInterpolation: TemplateString.StringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/templatestring\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/templatestring\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/templatestring\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/templatestring\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/templatestring","title":"TemplateString","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/item\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/template\/item\/init(path:contents:)","title":"init(path: String, contents: Template.Contents)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/item\/contents","title":"let contents: Template.Contents","type":"property"},{"path":"\/documentation\/projectdescription\/template\/item\/path","title":"let path: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/item\/directory(path:sourcepath:)","title":"static func directory(path: String, sourcePath: Path) -> Template.Item","type":"method"},{"path":"\/documentation\/projectdescription\/template\/item\/file(path:templatepath:)","title":"static func file(path: String, templatePath: Path) -> Template.Item","type":"method"},{"path":"\/documentation\/projectdescription\/template\/item\/string(path:contents:)","title":"static func string(path: String, contents: String) -> Template.Item","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/item\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/template\/item\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/template\/item","title":"Template.Item","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/init(description:attributes:items:)","title":"init(description: String, attributes: [Template.Attribute], items: [Template.Item])","type":"init"},{"path":"\/documentation\/projectdescription\/template\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/attributes","title":"let attributes: [Template.Attribute]","type":"property"},{"path":"\/documentation\/projectdescription\/template\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/projectdescription\/template\/items","title":"let items: [Template.Item]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/attribute\/optional(_:default:)","title":"case optional(String, default: String)","type":"case"},{"path":"\/documentation\/projectdescription\/template\/attribute\/required(_:)","title":"case required(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/attribute\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/attribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/template\/attribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/template\/attribute","title":"Template.Attribute","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/contents\/directory(_:)","title":"case directory(Path)","type":"case"},{"path":"\/documentation\/projectdescription\/template\/contents\/file(_:)","title":"case file(Path)","type":"case"},{"path":"\/documentation\/projectdescription\/template\/contents\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/contents\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/contents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/template\/contents\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/template\/contents","title":"Template.Contents","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/template\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/template\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/template","title":"Template","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/buildrule\/init(name:filetype:filepatterns:compilerspec:inputfiles:outputfiles:outputfilescompilerflags:script:runonceperarchitecture:)","title":"init(name: String?, fileType: BuildRule.FileType, filePatterns: String?, compilerSpec: BuildRule.CompilerSpec, inputFiles: [String], outputFiles: [String], outputFilesCompilerFlags: [String], script: String?, runOncePerArchitecture: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.property","title":"var compilerSpec: BuildRule.CompilerSpec","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/filepatterns","title":"var filePatterns: String?","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.property","title":"var fileType: BuildRule.FileType","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/inputfiles","title":"var inputFiles: [String]","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/outputfiles","title":"var outputFiles: [String]","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/outputfilescompilerflags","title":"var outputFilesCompilerFlags: [String]","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/runonceperarchitecture","title":"var runOncePerArchitecture: Bool?","type":"property"},{"path":"\/documentation\/projectdescription\/buildrule\/script","title":"var script: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/appintentsmetadataextractor","title":"case appIntentsMetadataExtractor","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/appshortcutstringsmetadataextractor","title":"case appShortcutStringsMetadataExtractor","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/appleclang","title":"case appleClang","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/assetcatalogcompiler","title":"case assetCatalogCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/codesign","title":"case codeSign","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/compilerealitycomposerproject","title":"case compileRealityComposerProject","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/compilescenekitshaders","title":"case compileSceneKitShaders","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/compileskybox","title":"case compileSkybox","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/compileusdz","title":"case compileUSDZ","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/compresspng","title":"case compressPNG","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/copyplistfile","title":"case copyPlistFile","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/copyscenekitassets","title":"case copySceneKitAssets","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/copystringsfile","title":"case copyStringsFile","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/copytifffile","title":"case copyTiffFile","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/coredatamappingmodelcompiler","title":"case coreDataMappingModelCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/coremlmodelcompiler","title":"case coreMLModelCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/customscript","title":"case customScript","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/dtrace","title":"case dTrace","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/datamodelcompiler","title":"case dataModelCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/defaultcompiler","title":"case defaultCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/generatespritekittextureatlas","title":"case generateSpriteKitTextureAtlas","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/iconutil","title":"case iconutil","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/instrumetspackagebuilder","title":"case instrumetsPackageBuilder","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/intentdefinitioncompiler","title":"case intentDefinitionCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/interfacebuildernibpostprocessor","title":"case interfaceBuilderNIBPostprocessor","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/interfacebuilderstoryboardcompiler","title":"case interfaceBuilderStoryboardCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/interfacebuilderstoryboardlinker","title":"case interfaceBuilderStoryboardLinker","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/interfacebuilderstoryboardpostprocessor","title":"case interfaceBuilderStoryboardPostprocessor","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/interfacebuilderxibcompiler","title":"case interfaceBuilderXIBCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/iokitinterfacegenerator","title":"case ioKitInterfaceGenerator","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/lex","title":"case lex","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/lsregisterurl","title":"case lsRegisterURL","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/metalcompiler","title":"case metalCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/metallinker","title":"case metalLinker","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/mig","title":"case mig","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/nasm","title":"case nasm","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/nmedit","title":"case nmedit","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/opencl","title":"case openCL","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/osacompile","title":"case osaCompile","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/pbxcp","title":"case pbxcp","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/processscenekitdocument","title":"case processSceneKitDocument","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/processxcappextensionpoints","title":"case processXCAppExtensionPoints","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/rez","title":"case rez","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/stripsymbols","title":"case stripSymbols","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/swiftabibaselinegenerator","title":"case swiftABIBaselineGenerator","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/swiftcompiler","title":"case swiftCompiler","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/swiftframeworkabichecker","title":"case swiftFrameworkABIChecker","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/textbasedapitool","title":"case textBasedAPITool","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/unifdef","title":"case unifdef","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/yacc","title":"case yacc","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/buildrule\/compilerspec-swift.enum","title":"BuildRule.CompilerSpec","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/assemblyasm","title":"case assemblyAsm","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/assemblyasmasm","title":"case assemblyAsmAsm","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/csource","title":"case cSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/classmodel","title":"case classModel","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/clipssource","title":"case clipsSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/coremlmachinelearning","title":"case coreMLMachineLearning","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/coremlmachinelearningmodelpackage","title":"case coreMLMachineLearningModelPackage","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/cppsource","title":"case cppSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/dae","title":"case dae","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/datamodel","title":"case dataModel","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/datamodelversion","title":"case dataModelVersion","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/documentationcatalog","title":"case documentationCatalog","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/dtracesource","title":"case dtraceSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/dylansource","title":"case dylanSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/fortransource","title":"case fortranSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/glslsource","title":"case glslSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/iigsource","title":"case iigSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/instrumentspackagedefinition","title":"case instrumentsPackageDefinition","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/interfacebuilder","title":"case interfaceBuilder","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/interfacebuilderstoryboard","title":"case interfaceBuilderStoryboard","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/interfacebuilderstoryboardpackage","title":"case interfaceBuilderStoryboardPackage","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/javasource","title":"case javaSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/lexsource","title":"case lexSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/llvmassembly","title":"case llvmAssembly","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/localizationstring","title":"case localizationString","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/localizationstringdictionary","title":"case localizationStringDictionary","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/macho","title":"case machO","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/machoobject","title":"case machOObject","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/mappingmodel","title":"case mappingModel","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/metalair","title":"case metalAIR","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/metalshadersource","title":"case metalShaderSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/migsource","title":"case migSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/nasmassembly","title":"case nasmAssembly","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/nib","title":"case nib","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/openclsource","title":"case openCLSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/pascalsource","title":"case pascalSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/protobufsource","title":"case protobufSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/rcprojectdocument","title":"case rcProjectDocument","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/rezsource","title":"case rezSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/sirikitintent","title":"case siriKitIntent","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/skyboxdocument","title":"case skyboxDocument","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/sourcefileswithnamesmatching","title":"case sourceFilesWithNamesMatching","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/swiftsource","title":"case swiftSource","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/xcappextensionpoints","title":"case xcAppExtensionPoints","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/xcodespecificationplist","title":"case xcodeSpecificationPlist","type":"case"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/yaccsource","title":"case yaccSource","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/buildrule\/filetype-swift.enum","title":"BuildRule.FileType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/buildrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/buildrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/buildrule","title":"BuildRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/ipad","title":"static let ipad: DeploymentDevice","type":"property"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/iphone","title":"static let iphone: DeploymentDevice","type":"property"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/mac","title":"static let mac: DeploymentDevice","type":"property"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/vision","title":"static let vision: DeploymentDevice","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/deploymentdevice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/projectdescription\/deploymentdevice\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/deploymentdevice\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/projectdescription\/deploymentdevice\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/projectdescription\/deploymentdevice\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/deploymentdevice","title":"DeploymentDevice","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environmentvariable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/projectdescription\/environmentvariable\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"path":"\/documentation\/projectdescription\/environmentvariable\/init(value:isenabled:)","title":"init(value: String, isEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environmentvariable\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/projectdescription\/environmentvariable\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environmentvariable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/environmentvariable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environmentvariable\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/environmentvariable\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/environmentvariable\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/environmentvariable\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/environmentvariable","title":"EnvironmentVariable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformcondition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformcondition\/platformfilters","title":"let platformFilters: Set<PlatformFilter>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformcondition\/when(_:)","title":"static func when(Set<PlatformFilter>) -> PlatformCondition?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platformcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/platformcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/platformcondition","title":"PlatformCondition","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/destinations","title":"Destinations","type":"typealias"},{"path":"\/documentation\/projectdescription\/platformfilters","title":"PlatformFilters","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/ios(targetversion:devices:supportsmacdesignedforios:)","title":"case iOS(targetVersion: String, devices: DeploymentDevice, supportsMacDesignedForIOS: Bool)","type":"case"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/macos(targetversion:)","title":"case macOS(targetVersion: String)","type":"case"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/tvos(targetversion:)","title":"case tvOS(targetVersion: String)","type":"case"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/visionos(targetversion:)","title":"case visionOS(targetVersion: String)","type":"case"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/watchos(targetversion:)","title":"case watchOS(targetVersion: String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/targetversion","title":"var targetVersion: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/deploymenttarget\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/deploymenttarget\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/deploymenttarget","title":"DeploymentTarget","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/dictionary(_:)","title":"case dictionary([String : Plist.Value])","type":"case"},{"path":"\/documentation\/projectdescription\/entitlements\/file(path:)","title":"case file(path: Path)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/path","title":"var path: Path?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/codingerror\/invalidtype(_:)","title":"case invalidType(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/codingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/projectdescription\/entitlements\/codingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/entitlements\/codingerror","title":"Entitlements.CodingError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/entitlements\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/entitlements\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/entitlements\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/entitlements\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/entitlements\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/entitlements\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/entitlements","title":"Entitlements","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/optional","title":"case optional","type":"case"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/required","title":"case required","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/frameworkstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/frameworkstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/frameworkstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/frameworkstatus","title":"FrameworkStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/launchstyle\/automatically","title":"case automatically","type":"case"},{"path":"\/documentation\/projectdescription\/launchstyle\/waitforexecutabletobelaunched","title":"case waitForExecutableToBeLaunched","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/launchstyle\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/launchstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/launchstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/launchstyle","title":"LaunchStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/mergedbinarytype\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/projectdescription\/mergedbinarytype\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/projectdescription\/mergedbinarytype\/manual(mergeabledependencies:)","title":"case manual(mergeableDependencies: Set<String>)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/mergedbinarytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/mergedbinarytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/mergedbinarytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/mergedbinarytype","title":"MergedBinaryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packageplatform\/ios","title":"case iOS","type":"case"},{"path":"\/documentation\/projectdescription\/packageplatform\/maccatalyst","title":"case macCatalyst","type":"case"},{"path":"\/documentation\/projectdescription\/packageplatform\/macos","title":"case macOS","type":"case"},{"path":"\/documentation\/projectdescription\/packageplatform\/tvos","title":"case tvOS","type":"case"},{"path":"\/documentation\/projectdescription\/packageplatform\/visionos","title":"case visionOS","type":"case"},{"path":"\/documentation\/projectdescription\/packageplatform\/watchos","title":"case watchOS","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packageplatform\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packageplatform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/packageplatform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packageplatform\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packageplatform\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packageplatform\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/packageplatform\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/packageplatform\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/packageplatform","title":"PackagePlatform","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packagesormanifest\/manifest","title":"case manifest","type":"case"},{"path":"\/documentation\/projectdescription\/packagesormanifest\/packages(_:)","title":"case packages([Package])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packagesormanifest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/packagesormanifest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/packagesormanifest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/packagesormanifest","title":"PackagesOrManifest","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platform\/ios","title":"case iOS","type":"case"},{"path":"\/documentation\/projectdescription\/platform\/macos","title":"case macOS","type":"case"},{"path":"\/documentation\/projectdescription\/platform\/tvos","title":"case tvOS","type":"case"},{"path":"\/documentation\/projectdescription\/platform\/visionos","title":"case visionOS","type":"case"},{"path":"\/documentation\/projectdescription\/platform\/watchos","title":"case watchOS","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platform\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/platform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platform\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platform\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/platform\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/platform\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/platform\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/platform","title":"Platform","type":"enum"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/array(_:)","title":"case array([Plist.Value])","type":"case"},{"path":"\/documentation\/projectdescription\/plist\/value\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/projectdescription\/plist\/value\/dictionary(_:)","title":"case dictionary([String : Plist.Value])","type":"case"},{"path":"\/documentation\/projectdescription\/plist\/value\/integer(_:)","title":"case integer(Int)","type":"case"},{"path":"\/documentation\/projectdescription\/plist\/value\/real(_:)","title":"case real(Double)","type":"case"},{"path":"\/documentation\/projectdescription\/plist\/value\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/plist\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(arrayliteral:)","title":"init(arrayLiteral: Plist.Value...)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(booleanliteral:)","title":"init(booleanLiteral: Bool)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, Plist.Value)...)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/plist\/value\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/projectdescription\/plist\/value\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/plist\/value","title":"Plist.Value","type":"enum"}],"path":"\/documentation\/projectdescription\/plist","title":"Plist","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/screenrecording","title":"case screenRecording","type":"case"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/screenshots","title":"case screenshots","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/projectdescription\/screencaptureformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/projectdescription\/screencaptureformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/projectdescription\/screencaptureformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/projectdescription\/screencaptureformat","title":"ScreenCaptureFormat","type":"enum"}],"path":"\/documentation\/projectdescription","title":"ProjectDescription","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}